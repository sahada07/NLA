# Generated by Django 4.2.7 on 2025-10-25 14:46

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bet_number', models.CharField(max_length=50, unique=True)),
                ('selected_numbers', models.JSONField(help_text='Array of numbers selected e.g., [5, 12, 23]')),
                ('stake_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('potential_winnings', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('actual_winnings', models.DecimalField(decimal_places=2, default=0, help_text='Actual amount won (0 if lost)', max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('won', 'Won'), ('lost', 'Lost'), ('cancelled', 'Cancelled'), ('paid', 'Paid Out')], default='pending', max_length=20)),
                ('placed_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('agent_commission', models.DecimalField(decimal_places=2, default=0, help_text='Commission earned by agent', max_digits=10)),
                ('agent', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'agent'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_bets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bets',
                'ordering': ['-placed_at'],
            },
        ),
        migrations.CreateModel(
            name='BetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('direct', 'Direct'), ('perm', 'Permutation'), ('banker', 'Banker'), ('against', 'Against'), ('machine', 'Machine Pick')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('base_odds', models.DecimalField(decimal_places=2, help_text='Base payout multiplier (e.g., 180000 for 5/90)', max_digits=10)),
                ('min_numbers_required', models.IntegerField(default=1)),
                ('max_numbers_allowed', models.IntegerField(default=5)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'bet_type',
            },
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('NLA 5/90', 'NLA 5/90'), ('Monday Special', 'Monday Special'), ('Lucky Tuesday', 'Lucky Tuesday'), ('Midweek', 'Midweek'), ('Fortune Thursday', 'Fortune Thursday'), ('Friday Bonanza', 'Friday Bonanza'), ('National Weekly', 'National Weekly'), ('Sunday Aseda', 'Sunday Aseda'), ('VAG Games', 'VAG Games'), ('VAG Monday', 'VAG Monday'), ('VAG Tuesday', 'VAG Tuesday'), ('VAG Wednesday', 'VAG Wednesday'), ('VAG Thursday', 'VAG Thursday'), ('VAG Friday', 'VAG Friday'), ('VAG Saturday', 'VAG Saturday'), ('VAG Sunday', 'VAG Sunday'), ('Noon Rush', 'Noon Rush'), ('Noon Monday', 'Noon Monday'), ('Noon Tuesday', 'Noon Tuesday'), ('Noon Wednesday', 'Noon Wednesday'), ('Noon Thursday', 'Noon Thursday'), ('Noon Friday', 'Noon Friday'), ('Noon Saturday', 'Noon Saturday'), ('Quick 5/11', 'Quick 5/11')], max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('nla_590', 'NLA 5/90'), ('vag_games', 'VAG Games'), ('noon_rush', 'Noon Rush'), ('other_games', 'Other Games')], default='nla_590', max_length=100)),
                ('description', models.TextField()),
                ('min_numbers', models.IntegerField(default=1, help_text='Minimum numbers to pick')),
                ('max_numbers', models.IntegerField(default=5, help_text='Maximum numbers to pick')),
                ('number_range_start', models.IntegerField(default=1, help_text='Starting number')),
                ('number_range_end', models.IntegerField(default=90, help_text='Ending number')),
                ('min_stake', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Minimum stake amount', max_digits=10)),
                ('max_stake', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Maximum stake amount', max_digits=10)),
                ('draw_time', models.TimeField(blank=True, help_text='Time of draw', null=True)),
                ('draw_days', models.CharField(help_text="Comma-separated days (e.g., 'Monday,Wednesday,Friday')", max_length=100)),
                ('notification_frequency', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest')], default='instant', help_text='How often to send notifications', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'game_types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('game_update', 'Game Update'), ('draw_result', 'Draw Result'), ('bet_won', 'Bet Won'), ('bet_lost', 'Bet Lost'), ('new_game', 'New Game'), ('promotion', 'Promotion'), ('system', 'System Alert')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('bet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='betting.bet')),
                ('game_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='betting.gametype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Draw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draw_number', models.CharField(max_length=50, unique=True)),
                ('draw_date', models.DateField()),
                ('draw_time', models.TimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('open', 'Open for Betting'), ('closed', 'Betting Closed'), ('drawing', 'Draw in Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('betting_opens_at', models.DateTimeField()),
                ('betting_closes_at', models.DateTimeField()),
                ('winning_numbers', models.JSONField(blank=True, help_text='Array of winning numbers e.g., [5, 12, 23, 45, 67]', null=True)),
                ('machine_number', models.CharField(blank=True, max_length=50)),
                ('total_bets', models.IntegerField(default=0)),
                ('total_stake_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_payout_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draws', to='betting.gametype')),
            ],
            options={
                'db_table': 'draws',
                'ordering': ['-draw_date', '-draw_time'],
            },
        ),
        migrations.CreateModel(
            name='BetTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('stake', 'Stake Payment'), ('win', 'Winnings Payout'), ('refund', 'Refund'), ('commission', 'Agent Commission')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='betting.bet')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bet_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='bet',
            name='bet_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bets', to='betting.bettype'),
        ),
        migrations.AddField(
            model_name='bet',
            name='draw',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='betting.draw'),
        ),
        migrations.AddField(
            model_name='bet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='betting.gametype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_subscriptions',
                'unique_together': {('user', 'game_type')},
            },
        ),
        migrations.CreateModel(
            name='GameOdds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numbers_count', models.IntegerField(help_text='How many numbers in the bet (e.g., 2, 3, 5)')),
                ('numbers_matched', models.IntegerField(help_text='How many numbers must match to win')),
                ('payout_multiplier', models.DecimalField(decimal_places=2, help_text='Multiply stake by this to get winnings', max_digits=10)),
                ('bet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odds', to='betting.bettype')),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odds', to='betting.gametype')),
            ],
            options={
                'db_table': 'game_odds',
                'unique_together': {('game_type', 'bet_type', 'numbers_count', 'numbers_matched')},
            },
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['user', 'status'], name='bets_user_id_9b6bce_idx'),
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['draw', 'status'], name='bets_draw_id_203f7b_idx'),
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['bet_number'], name='bets_bet_num_361917_idx'),
        ),
    ]
